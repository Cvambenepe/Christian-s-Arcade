<!DOCTYPE html>
<html>
  <head>
    <title>Paddle Game</title>
    <style>
      canvas {
        border: 1px solid black;
      }
    </style>
  </head>
  <body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>

    <script>
      // Game variables
      var canvas = document.getElementById("gameCanvas");
      var ctx = canvas.getContext("2d");
      var ballRadius = 10;
      var x = canvas.width/2;
      var y = canvas.height-30;
      var dx = 2;
      var dy = -2;
      var paddleHeight = 10;
      var paddleWidth = 75;
      var paddleX = (canvas.width-paddleWidth)/2;
      var rightPressed = false;
      var leftPressed = false;

      // Event listeners for paddle movement
      document.addEventListener("keydown", keyDownHandler, false);
      document.addEventListener("keyup", keyUpHandler, false);

      // Functions for paddle movement
      function keyDownHandler(e) {
        if(e.keyCode == 39) {
          rightPressed = true;
        }
        else if(e.keyCode == 37) {
          leftPressed = true;
        }
      }

      function keyUpHandler(e) {
        if(e.keyCode == 39) {
          rightPressed = false;
        }
        else if(e.keyCode == 37) {
          leftPressed = false;
        }
      }

      // Function to draw ball
      function drawBall() {
        ctx.beginPath();
        ctx.arc(x, y, ballRadius, 0, Math.PI*2);
        ctx.fillStyle = "#0095DD";
        ctx.fill();
        ctx.closePath();
      }

      // Function to draw paddle
      function drawPaddle() {
        ctx.beginPath();
        ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
        ctx.fillStyle = "#0095DD";
        ctx.fill();
        ctx.closePath();
      }

      // Function to update game state
      function update() {
        // Move paddle
        if(rightPressed && paddleX < canvas.width-paddleWidth) {
          paddleX += 7;
        }
        else if(leftPressed && paddleX > 0) {
          paddleX -= 7;
        }

        // Move ball and check for collision with walls or paddle
        if(x + dx > canvas.width-ballRadius || x + dx < ballRadius) {
          dx = -dx;
        }
        if(y + dy < ballRadius) {
          dy = -dy;
        }
        else if(y + dy > canvas.height-ballRadius) {
          if(x > paddleX && x < paddleX + paddleWidth) {
            dy = -dy;
          }
          else {
            alert("GAME OVER");
            document.location.reload();
          }
        }

        x += dx;
        y += dy;

        // Draw game objects
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawBall();
        drawPaddle();

        // Call update function again
        requestAnimationFrame(update);
      }

      // Call update function to start game
      update();
    </script>
  </body>
</html>
